#include <graphics.h>
#include <conio.h>
#include<iostream.h>
#include<dos.h>
      void bf(int x,int y,int f,int b)
{
	if(getpixel(x,y)!=b && getpixel(x,y)!=f)
	{       delay(1);
		putpixel(x,y,f);
		bf(x+1,y,f,b);
		bf(x-1,y,f,b);
		bf(x,y+1,f,b);
		bf(x,y-1,f,b);
	}
}
      void bff(int x,int y,int f,int b)
{
	if(getpixel(x,y)!=b && getpixel(x,y)!=f)
	{       delay(25);
		putpixel(x,y,f);
		bf(x+1,y,f,b);
		bf(x-1,y,f,b);
		bf(x,y+1,f,b);
		bf(x,y-1,f,b);}}
void main()
{
   int gd = DETECT, gm,i;

   initgraph(&gd, &gm, "C:\\TURBOC3\\BGI");

// for background
 for(i=0;i<510;i++){
 setcolor(4);
 line(50+i,10, 50+i,480);
 }
 setcolor(0);
 delay(300);
 // eyebrows
int eye1[58]={
206,223, 220,222, 236,225, 243,227, 251,231, 271,231, 277,235, 280,235,
283,237, 287,236, 289,238, 293,236, 290,244, 287,246, 279,242, 272,240,
261,238, 249,237, 237,238, 224,238, 211,240, 210,237, 204,237, 202,234,
203,232, 205,229, 203,224, 205,223, 206,223};
drawpoly(29,eye1);delay(300);bf(286,240,0,0);
int eye2[64]={
319,244, 315,235, 321,238, 322,235, 325,237, 327,235, 332,235, 337,231,
343,232, 350,231, 356,230, 370,225, 379,224, 388,223, 398,223, 404,223,
403,224, 406,226, 405,229, 407,230, 406,233, 408,234, 401,238, 397,240,
389,239, 377,238, 363,238, 348,238, 335,240, 326,243, 323,247, 319,244};
drawpoly(32,eye2);delay(300);bf(321,240,0,0);
// gogls
int left[104]={
288,243, 291,247, 292,250, 291,255, 289,262, 284,270, 280,276, 276,281,
266,287, 256,291, 245,293, 235,293, 225,291, 214,288, 206,283, 200,277,
194,269, 194,258, 195,251, 191,251, 188,251, 187,247, 191,247, 196,248,
199,244, 203,241, 209,237, 217,239, 211,241, 205,243, 200,248, 198,254,
198,262, 198,268, 200,272, 203,277, 207,281, 213,284, 219,287, 230,289,
244,289, 253,289, 258,287, 267,283, 274,278, 280,272, 284,266, 286,260,
288,254, 288,249, 286,244, 288,243};
drawpoly(52,left);delay(300);bff(289,246,0,0);bff(243,291,0,0);delay(500);
int right[94]={
320,242, 319,246, 319,250, 321,258, 324,267, 327,273, 331,278, 338,284,
346,288, 355,292, 365,293, 379,292, 393,289, 404,284, 412,277, 415,269,
416,253, 416,251, 423,250, 422,246, 414,248, 411,243, 404,239, 398,237,
393,239, 401,241, 408,244, 411,248, 413,254, 413,261, 412,267, 409,276,
402,282, 394,286, 382,289, 373,290, 359,290, 352,288, 345,284, 338,280,
332,275, 327,268, 323,259, 323,252, 323,246, 326,243, 320,242};
drawpoly(47,right);delay(300);bff(321,249,0,0);bff(414,250,0,0);delay(500);
int middle[26]={
289,247, 296,246, 303,246, 320,246, 321,251, 318,250, 315,249, 310,248,
302,248, 296,248, 292,249, 291,251, 289,247};
drawpoly(13,middle); bff(293,248,0,0);
// beard = outside
line(304,343,296,341);delay(40);line(296,341,289,336);delay(40);line(289,336,284,336);delay(40);
line(284,336,273,336);delay(40);line(273,336,260,335);delay(40);line(260,335,251,338);delay(40);
line(251,338,246,341);delay(40);line(246,341,244,342);delay(40);line(244,342,232,353);delay(40);
line(232,353,233,372);delay(40);line(233,372,229,386);delay(40);line(229,386,224,398);delay(40);
line(224,398,223,408);delay(40);line(223,408,224,415);delay(40);line(224,415,226,421);delay(40);
line(226,421,229,425);delay(40);line(229,425,231,435);delay(40);line(231,435,236,443);delay(40);
line(236,443,242,445);delay(40);line(242,445,260,456);delay(40);line(260,456,280,468);delay(40);
line(280,468,329,468);delay(40);
line(329,468,351,456);delay(40);line(351,456,376,440);delay(40);line(376,440,380,434);delay(40);
line(380,434,381,427);delay(40);line(381,427,387,417);delay(40);line(387,417,388,406);delay(40);
line(388,406,385,392);delay(40);line(385,392,380,381);delay(40);line(380,381,378,374);delay(40);
line(378,374,378,354);delay(40);line(378,354,369,345);delay(40);line(369,345,360,338);delay(40);
line(360,338,354,336);delay(40);line(354,336,343,336);delay(40);line(343,336,325,337);delay(40);
line(325,337,322,336);delay(40);line(322,336,316,340);delay(40);line(316,340,312,342);delay(40);
line(312,342,304,343);delay(40);
//inside
line(305,364,303,364);delay(40);line(303,364,301,372);delay(40);line(301,372,294,372);delay(40);
line(294,372,280,371);delay(40);line(280,371,282,370);delay(40);line(282,370,259,371);delay(40);
line(259,371,256,369);delay(40);line(256,369,246,382);delay(40);line(246,382,245,387);delay(40);
line(245,387,246,391);delay(40);line(246,391,266,411);delay(40);line(266,411,280,394);delay(40);
line(280,394,285,388);delay(40);line(285,388,291,385);delay(40);line(291,385,303,384);delay(40);
line(303,384,317,384);delay(40);line(317,384,322,386);delay(40);line(322,386,331,395);delay(40);
line(331,395,344,410);delay(40);line(344,410,365,390);delay(40);line(365,390,366,386);delay(40);
line(366,386,353,369);delay(40);line(353,369,347,371);delay(40);line(347,371,332,371);delay(40);
line(332,371,314,373);delay(40);line(314,373,308,371);delay(40);line(308,371,305,364);delay(40);
// for color
line(305,364,304,343);line(229,386,245,387);bf(291,367,0,0);
line(366,386,385,392);bf(314,368,0,0);
line(257,454,355,453);bf(302,456,0,0);
line(310,384,310,468);bf(249,416,0,0);bf(369,408,0,0);
//hat
line(304,19,277,22);delay(40);line(277,22,262,25);delay(40);line(262,25,246,29);delay(40);
line(246,29,234,33);delay(40);line(234,33,223,31);delay(40);line(223,31,203,29);delay(40);
line(203,29,191,34);delay(40);line(191,34,182,45);delay(40);line(182,45,179,76);delay(40);
line(179,76,175,109);delay(40);line(175,109,174,123);delay(40);line(174,123,174,139);delay(40);
line(174,139,146,138);delay(40);line(146,138,119,139);delay(40);line(119,139,106,141);delay(40);
line(106,141,101,146);delay(40);line(101,146,100,158);delay(40);line(100,158,106,170);delay(40);
line(106,170,118,179);delay(40);line(118,179,134,186);delay(40);line(134,186,155,194);delay(40);
line(155,194,177,200);delay(40);line(177,200,198,205);delay(40);line(198,205,223,210);delay(40);
line(223,210,250,213);delay(40);line(250,213,280,215);delay(40);line(280,215,304,215);delay(40);
line(304,215,329,214);delay(40);line(329,214,361,213);delay(40);line(361,213,391,208);delay(40);
line(391,208,423,202);delay(40);line(423,202,450,195);delay(40);line(450,195,472,186);delay(40);
line(472,186,492,179);delay(40);line(492,179,504,167);delay(40);line(504,167,509,159);delay(40);
line(509,159,507,147);delay(40);line(507,147,502,141);delay(40);line(502,141,486,139);delay(40);
line(486,139,455,139);delay(40);line(455,139,434,138);delay(40);line(434,138,432,113);delay(40);
line(432,113,429,74);delay(40);line(429,74,425,45);delay(40);line(425,45,419,36);delay(40);
line(419,36,410,31);delay(40);line(410,31,398,30);delay(40);line(398,30,385,30);delay(40);
line(385,30,374,32);delay(40);line(374,32,361,28);delay(40);line(361,28,342,24);delay(40);
line(342,22,329,22);delay(40);line(329,22,316,20);delay(40);line(316,20,304,19);delay(40);
// color
for(i=0;i<120;i++){   delay(34);
line(304,19+i,277,22+i);line(277,22+i,262,25+i);line(262,25+i,246,29+i);
line(246,29+i,234,33+i);line(234,33+i,223,31+i);line(223,31+i,203,29+i);
line(203,29+i,191,34+i);line(191,34+i,182,45+i);line(425,45+i,419,36+i);
line(419,36+i,410,31+i);line(410,31+i,398,30+i);line(398,30+i,385,30+i);
line(385,30+i,374,32+i);line(374,32+i,361,28+i);line(361,28+i,342,24+i);
line(342,22+i,329,22+i);line(329,22+i,316,20+i);line(316,20+i,304,19+i);
//
line(182+i,45,179+i,76);line(179+i,76,175+i,109);line(175+i,109,174+i,123);
line(174+i,123,174+i,139);line(174+i,139,146+i,138);line(146+i,138,119+i,139);
line(119+i,139,106+i,141);line(106+i,141,101+i,146);line(101+i,146,100+i,158);
line(100+i,158,106+i,170);line(106+i,170,118+i,179);line(118+i,179,134+i,186);
line(134+i,186,155+i,194);line(155+i,194,177+i,200);line(177+i,200,198+i,205);
//
line(198,205-i,223,210-i);line(223,210-i,250,213-i);line(250,213-i,280,215-i);
line(280,215-i,304,215-i);line(304,215-i,329,214-i);line(329,214-i,361,213-i);
line(361,213-i,391,208-i);line(391,208-i,423,202-i);
//
line(361-i,213,391-i,208);line(391-i,208,423-i,202);line(423-i,202,450-i,195);
line(450-i,195,472-i,186);line(432-i,113,429-i,74);line(429-i,74,425-i,45);
line(472-i,186,492-i,179);line(492-i,179,504-i,167);line(504-i,167,509-i,159);
line(509-i,159,507-i,147);line(507-i,147,502-i,141);line(502-i,141,486-i,139);
line(486-i,139,455-i,139);line(455-i,139,434-i,138);line(434-i,138,432-i,113);
}
delay(500);
for(i=0;i<240;i++){
delay(14);setcolor(0);
line(50+i,10,50+i,480);
line(50,480-i,560,480-i);
line(560-i,480,560-i,10);
line(560,10+i,50,10+i);
}
for(i=0;i<2;i++){
setcolor(15);
line(200+i,250,200+i,180);line(200,180+i,270,180+i);
line(270-i,180,270-i,250);line(200,250-i,270,250-i);
line(270+i,250,270+i,320);line(270,320-i,340,320-i);
line(340-i,320,340-i,250);line(340,250+i,270,250+i);   }
for(i=2;i<69;i++){
setcolor(2);delay(10);
line(200+i,248,200+i,182);
line(270+i,252,270+i,318); }
setcolor(15);
 settextstyle(0,0,1.7);
     outtextxy(251,186,"35");
     outtextxy(321,256,"56");
 settextstyle(1,0,6);
     outtextxy(275,260,"Ba");
     outtextxy(205,190,"Br");
getch();
cleardevice();
}






